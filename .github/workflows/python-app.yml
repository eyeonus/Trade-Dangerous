# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ release/v1 ]
  pull_request:
    branches: [ release/v1 ]

jobs:
  test:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os:
          - Ubuntu
          - Windows
        py:
          - "3.11"
          - "3.10"
          - "3.9"
          - "3.8"
          - "3.7"
          
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.py }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.py }}

   
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install flake8 pytest
        python3 -m pip install -r requirements/publish.txt
        python3 -m pip install tox tox-gh-actions
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with tox
      run: |
        tox


  pypi-publish:
    name: Upload release to PyPI
    needs: test
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/tradedangerous
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
      actions: write
      checks: write
      contents: write
      deployments: write
      issues: write
      discussions: write
      packages: write
      pages: write
      pull-requests: write
      repository-projects: write
      security-events: write
      statuses: write
    steps:
    # retrieve your distributions here
    - uses: actions/checkout@v4
      with:
          fetch-depth: 0

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install -r requirements/publish.txt

    - name: Configure git
      run: |
        git config --global user.name "semantic-release (via GitHub Actions)"
        git config --global user.email "semantic-release@gh"

    - name: semantic-release publish if master
      if: github.ref == 'refs/heads/release/v1'
      uses: relekang/python-semantic-release@master
      with: 
        github_token: ${{ secrets.GITHUB_TOKEN }}

    
    - name: semantic-release changelog
      run: semantic-release changelog

    - name: build distribution
      run: python3 -m build

    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
